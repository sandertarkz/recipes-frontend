/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import type {
  HTTPValidationError,
  UserCreate,
  UserPublic,
} from "../models/index";
import {
  HTTPValidationErrorFromJSON,
  HTTPValidationErrorToJSON,
  UserCreateFromJSON,
  UserCreateToJSON,
  UserPublicFromJSON,
  UserPublicToJSON,
} from "../models/index";

export interface CreateUserUsersPostRequest {
  userCreate: UserCreate;
}

export interface GetUserUsersIdGetRequest {
  id: number;
}

/**
 *
 */
export class UsersApi extends runtime.BaseAPI {
  /**
   * Create User
   */
  async createUserUsersPostRaw(
    requestParameters: CreateUserUsersPostRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<UserPublic>> {
    if (requestParameters["userCreate"] == null) {
      throw new runtime.RequiredError(
        "userCreate",
        'Required parameter "userCreate" was null or undefined when calling createUserUsersPost().',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters["Content-Type"] = "application/json";

    const response = await this.request(
      {
        path: `/users`,
        method: "POST",
        headers: headerParameters,
        query: queryParameters,
        body: UserCreateToJSON(requestParameters["userCreate"]),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      UserPublicFromJSON(jsonValue),
    );
  }

  /**
   * Create User
   */
  async createUserUsersPost(
    requestParameters: CreateUserUsersPostRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<UserPublic> {
    const response = await this.createUserUsersPostRaw(
      requestParameters,
      initOverrides,
    );
    return await response.value();
  }

  /**
   * Get User
   */
  async getUserUsersIdGetRaw(
    requestParameters: GetUserUsersIdGetRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<UserPublic>> {
    if (requestParameters["id"] == null) {
      throw new runtime.RequiredError(
        "id",
        'Required parameter "id" was null or undefined when calling getUserUsersIdGet().',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/users/{id}`.replace(
          `{${"id"}}`,
          encodeURIComponent(String(requestParameters["id"])),
        ),
        method: "GET",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      UserPublicFromJSON(jsonValue),
    );
  }

  /**
   * Get User
   */
  async getUserUsersIdGet(
    requestParameters: GetUserUsersIdGetRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<UserPublic> {
    const response = await this.getUserUsersIdGetRaw(
      requestParameters,
      initOverrides,
    );
    return await response.value();
  }
}
