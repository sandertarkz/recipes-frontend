/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import type { HTTPValidationError, Token, UserLogin } from "../models/index";
import {
  HTTPValidationErrorFromJSON,
  HTTPValidationErrorToJSON,
  TokenFromJSON,
  TokenToJSON,
  UserLoginFromJSON,
  UserLoginToJSON,
} from "../models/index";

export interface CreateUserLoginPostRequest {
  userLogin: UserLogin;
}

/**
 *
 */
export class AuthApi extends runtime.BaseAPI {
  /**
   * Create User
   */
  async createUserLoginPostRaw(
    requestParameters: CreateUserLoginPostRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<Token>> {
    if (requestParameters["userLogin"] == null) {
      throw new runtime.RequiredError(
        "userLogin",
        'Required parameter "userLogin" was null or undefined when calling createUserLoginPost().',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters["Content-Type"] = "application/json";

    const response = await this.request(
      {
        path: `/login`,
        method: "POST",
        headers: headerParameters,
        query: queryParameters,
        body: UserLoginToJSON(requestParameters["userLogin"]),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      TokenFromJSON(jsonValue),
    );
  }

  /**
   * Create User
   */
  async createUserLoginPost(
    requestParameters: CreateUserLoginPostRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<Token> {
    const response = await this.createUserLoginPostRaw(
      requestParameters,
      initOverrides,
    );
    return await response.value();
  }
}
